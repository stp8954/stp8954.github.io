[{"body":"","link":"https://stp8954.github.io/","section":"","tags":null,"title":""},{"body":"","link":"https://stp8954.github.io/tags/ai/","section":"tags","tags":null,"title":"AI"},{"body":"","link":"https://stp8954.github.io/categories/","section":"categories","tags":null,"title":"Categories"},{"body":"","link":"https://stp8954.github.io/series/general/","section":"series","tags":null,"title":"General"},{"body":"","link":"https://stp8954.github.io/categories/general/","section":"categories","tags":null,"title":"General"},{"body":"","link":"https://stp8954.github.io/tags/interview-preparation/","section":"tags","tags":null,"title":"Interview Preparation"},{"body":"Hello, world.\nIf you've ever typed \u0026quot;how to prepare for a Machine Learning Engineer interview\u0026quot; into a search bar, you know the feeling. It's like standing at the base of a mountain covered in fog. The path isn't clear, and the peak seems impossibly far away.\nThe list of required skills is daunting. Unlike interviews for SDE, the industry has not standardized the interview process for MLE roles. In fact, they don’t even agree on what an MLE should be. You need to be a solid software engineer, fluent in algorithms and data structures. You need to be a practical scientist, with a deep intuition for model mechanics, from linear regression to transformers. And on top of all that, you need to be an architect, capable of designing large-scale, distributed systems that can serve models to millions of users.\nIt’s a lot. And frankly, a scattered approach of randomly doing LeetCode problems and taking courses won't cut it.\nI started my interview prep journey early this year and went through multiple interview rounds at large and medium sized companies (Lyft, Netflix, Meta, Chewy, Expedia, Atlassian). Converted 2 and made it to the last round of the rest. It was not easy to switch from an SDE to an MLE role and learned a lot during that phase. I plan to take another shot at some of those again later in the year and I’ve decided to do it in the open. I feel that the best way to learn is to teach, and the best way to stay accountable is to have a public plan. This blog is that plan. My goal is to create a structured, comprehensive resource based on the interviews I went through so far so I can follow it in the future, and that I hope can serve as a guide for anyone else on the same path.\nThe Game Plan I dont have the details figured out yet, but am thinking on publishing in multiple tracks.\nTrack 1: The Practice Loop (Weekly)This is our bread and butter. Every week, we'll tackle the fundamentals with a \u0026quot;workout\u0026quot; consisting of:\nCoding Problems: 2-3 LeetCode-style problems (a mix of mediums and hards) focusing on patterns crucial for tech interviews. This will be mostly resources to some really good explanations on YouTube and other blogs\nML Concepts (Q\u0026amp;A): A few \u0026quot;flashcard-style\u0026quot; questions and answers covering core ML theory. Think: \u0026quot;Explain the bias-variance tradeoff,\u0026quot; or \u0026quot;What is label leakage and how do you prevent it?\u0026quot;\nML Coding Challenge: A hands-on problem like \u0026quot;Implement logistic regression from scratch using NumPy\u0026quot; or \u0026quot;Code a custom K-Fold cross-validator.\u0026quot;\nTrack 2: From Paper to Practice (Weekly)Top engineers stay current. In this track, we'll dissect one influential paper a week, focusing on foundational work in NLP, Ranking, or Recommender Systems. We won't just summarize it; we'll follow a rigorous \u0026quot;three-pass\u0026quot; methodology to understand its core contribution and even try to replicate its key ideas in code.\nTrack 3: The ML System Design Blueprint (Bi-weekly)This is where we connect theory to production. Every two weeks, we'll tackle a classic ML system design prompt, like \u0026quot;Design a News Feed Ranker,\u0026quot; \u0026quot;Design YouTube Recommendations,\u0026quot; or \u0026quot;Design a system for detecting hate speech.\u0026quot; We'll whiteboard the architecture, discuss trade-offs, and detail everything from data ingestion to model serving and monitoring.\nTrack 4: The Foundations of Scale (Bi-weekly)An ML system is still a system. This track runs parallel to the one above but focuses on general, non-ML system design. We'll tackle problems like \u0026quot;Design a URL Shortener\u0026quot; or \u0026quot;Design a Distributed Message Queue.\u0026quot; This builds the foundational software engineering muscle needed to operate at scale.\nTrack 5: The Builder's Log (As it happens)This is my freestyle track. Whenever I learn something new, build a small side project, or have a thought on the industry, I'll post it here. It's for the joy of building and the spirit of continuous learning.\nLet's Build Together\nThis roadmap is ambitious, but the journey to becoming a top-tier ML engineer is supposed to be. I'm putting this out there not as an expert who has all the answers, but as a fellow builder on the path, documenting the climb.\nI invite you to follow along. Challenge my solutions. Suggest papers to review or design problems to tackle in the comments. Let's turn this solitary study grind into a collaborative workshop.\nReady to get started? The first workout from the Practice Loop drops next Sunday (06/29/2025).\nLet's do this.\n","link":"https://stp8954.github.io/post/introduction/","section":"post","tags":["ML","AI","ML Engineering","Interview Preparation"],"title":"Introduction"},{"body":"","link":"https://stp8954.github.io/tags/ml/","section":"tags","tags":null,"title":"ML"},{"body":"","link":"https://stp8954.github.io/tags/ml-engineering/","section":"tags","tags":null,"title":"ML Engineering"},{"body":"","link":"https://stp8954.github.io/categories/ml-engineering/","section":"categories","tags":null,"title":"ML Engineering"},{"body":"","link":"https://stp8954.github.io/post/","section":"post","tags":["index"],"title":"Posts"},{"body":"","link":"https://stp8954.github.io/series/","section":"series","tags":null,"title":"Series"},{"body":"","link":"https://stp8954.github.io/tags/","section":"tags","tags":null,"title":"Tags"},{"body":"TODO// ADD about description\n","link":"https://stp8954.github.io/about/","section":"","tags":null,"title":"About"},{"body":"","link":"https://stp8954.github.io/tags/hugo/","section":"tags","tags":null,"title":"Hugo"},{"body":"","link":"https://stp8954.github.io/categories/syntax/","section":"categories","tags":null,"title":"syntax"},{"body":"","link":"https://stp8954.github.io/series/themes-guide/","section":"series","tags":null,"title":"Themes Guide"},{"body":"Page bundles are an optional way to organize page resources within Hugo.\nYou can opt-in to using page bundles in Hugo Clarity with usePageBundles in your site configuration or in a page's front matter. Read more about usePageBundles.\nWith page bundles, resources for a page or section, like images or attached files, live in the same directory as the content itself rather than in your static directory.\nHugo Clarity supports the use of leaf bundles, which are any directories within the content directory that contain an index.md file. Hugo's documentation gives this example:\n1content 2├── about 3│ ├── index.md 4├── posts 5│ ├── my-post 6│ │ ├── content1.md 7│ │ ├── content2.md 8│ │ ├── image1.jpg 9│ │ ├── image2.png 10│ │ └── index.md 11│ └── my-other-post 12│ └── index.md 13│ 14└── another-section 15 ├── .. 16 └── not-a-leaf-bundle 17 ├── .. 18 └── another-leaf-bundle 19 └── index.md In the above example `content` directory, there are four leaf bundles: about: This leaf bundle is at the root level (directly under content directory) and has only the index.md.\nmy-post: This leaf bundle has the index.md, two other content Markdown files and two image files. image1 is a page resource of my-post and only available in my-post/index.md resources. image2 is a page resource of my-post and only available in my-post/index.md resources.\nmy-other-post: This leaf bundle has only the index.md.\nanother-leaf-bundle: This leaf bundle is nested under couple of directories. This bundle also has only the index.md.\nThe hierarchy depth at which a leaf bundle is created does not matter, as long as it is not inside another leaf bundle.\nAdvantages to using page bundles The image below is part of the bundle of this page, and is located at content/post/bundle/building.png. Because it's within this page's bundle, the markup for the image only has to specify the image's filename, building.png.\nIf you ever change the name of the directory in which this Markdown file and the image reside, the reference to the image would not need to be updated.\nIn addition to more cleanly organizing your content and related assets, when using page bundles, Hugo Clarity will automatically generate markup for modern image formats, which are smaller in file size.\nFor instance, when you reference an image like building.png, Hugo Clarity will check to see if the same image (based on filename) exists in WebP, AVIF or JXL formats. If you inspect the image above, you'll see a \u0026lt;source\u0026gt; element for building.webp, because that file is also present. Hugo Clarity will only include the markup if these images exist.\nBrowsers that support these formats and the \u0026lt;picture\u0026gt; element will load them, while browsers that do not will fall-back to the default image. Read more about this process.\nFinally, note that page assets can be further managed and refined within the page's front matter if you wish, and are not limited to images alone.\nDisadvantages to using page bundles Page resources in a bundle are only available to the page with which they are bundled — that means you can't include an image with one page and then reference it from another.\nImages that are being used in multiple places are more appropriate for your Hugo assets directory. Unlike files in the Hugo static directory, files in the assets directory can be run through Hugo Pipes, which includes image processing.\n","link":"https://stp8954.github.io/post/bundle/","section":"post","tags":["Hugo"],"title":"Using Hugo page bundles"},{"body":"","link":"https://stp8954.github.io/archives/","section":"","tags":null,"title":""},{"body":"","link":"https://stp8954.github.io/tags/index/","section":"tags","tags":null,"title":"index"}]